"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 3)
}

"Account of a person who utilizes this application."
type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    comments: [Comment!]!   # Assuming a one-to-many relationship with comments
    feedbacks: [FeedBack!]!   # Assuming a one-to-many relationship with comments
}

type Comment {
    id: ID!
    content: String!
    user_id: ID!
    user: User!             # Assuming a one-to-one relationship with a user
}

type FeedBack {
    id: ID!
    desc: String!
}


type Mutation {
    createUser(input: CreateUserInput @spread): User @create
    deleteUser(id: ID! @whereKey): User! @delete

}

input CreateUserInput {
  name: String!
  email: String! @rules(apply: ["email","unique:users,email"])
  password: String!
}
